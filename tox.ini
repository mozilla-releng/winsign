[tox]
envlist = docker

[testenv:docker]
whitelist_externals=docker
deps =
usedevelop = false
depends =
skip_install = true
ignore_errors = true
commands =
    docker build --build-arg PYTHON_VERSION=3.8 -t winsign-{envname}-py38-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}:/app -v winsign-{envname}-py38-tox:/app/.tox winsign-{envname}-py38-test clean,check,py38,report
    docker build --build-arg PYTHON_VERSION=3.7 -t winsign-{envname}-py37-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}:/app -v winsign-{envname}-py37-tox:/app/.tox winsign-{envname}-py37-test py37
    docker build --build-arg PYTHON_VERSION=3.6 -t winsign-{envname}-py36-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}:/app -v winsign-{envname}-py36-tox:/app/.tox winsign-{envname}-py36-test py36

[testenv]
depends = clean
setenv =
    PYTHONPATH = {toxinidir}/tests
usedevelop = true
deps =
    pytest
    pytest-asyncio
    pytest-cov
    pytest-localserver
    pytest-random-order
commands =
    {posargs:py.test -v --random-order --cov-config=tox.ini --cov-append --cov=winsign --cov-report term-missing --durations=10 tests}

[testenv:clean]
skip_install = true
deps = coverage
commands = coverage erase
depends =

[testenv:report]
skip_install = true
deps = coverage
commands = coverage report -m
depends = py36,py37
parallel_show_output = true

[testenv:check]
skip_install = true
deps = -r{toxinidir}/requirements/check.txt
commands =
    black --diff --check {toxinidir}
    isort --check -rc -df {toxinidir}
    flake8 {toxinidir}
    pip-compile-multi verify
    check-manifest -v {toxinidir}

[testenv:docs]
deps = -r{toxinidir}/requirements/docs.txt
whitelist_externals = make
commands = make -C docs {posargs:html}

[coverage:run]
branch = true

[flake8]
max-line-length = 200
ignore = E203,W503
docstring-convention = google

[pytest]
addopts = --cov-config=tox.ini --cov-append --cov=winsign --cov-report=term-missing --durations=10 -v
